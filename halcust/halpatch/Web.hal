external function string 255 ReplaceCharByString(string,string,string);SetLangMode(LangUkrainian,"RUS",0);function string 100 GetStatusCaption(string statusCode)begin  string 100 status;      switch (statusCode) begin      case "in_work": status = "В работе";      case "no_crew": status = "Нет экипажа";      case "no_shift": status = "Нет сменщика";      case "long_term_service": status = "Длительный сервис";      case "crash_firm_repair": status = "ДТП чиним сами";      case "crash_own_repair": status = "ДТП чиним за свой счет";      otherwise status = "Неизвестно";    end;  GetStatusCaption = status;  return;end;procedure ShowMessagePage(string param, string basePath)begin   area messPage,tempAr;  string 255 fileName,markWord,errMess;  longint strPos;  Boolean webOutF;        fileName = "message_page.html";    if (FILEEXISTS(basePath & fileName)) then begin      if (NonBlank(param)) then begin        AddFileToArea(basePath & fileName,tempAr,false);        markWord = "\/\/@error";        strPos = FINDSTRINGINAREA(markWord,tempAr);        if (strPos>-1) then begin          GETAREAFROMAREA(tempAr,0,strPos,messPage);          AddTextToArea(param,messPage);          strPos = strPos + len(markWord);          GETAREAFROMAREA(tempAr,strPos,GetAreaLength(tempAr) - strPos,messPage);          WebOutArea2(messPage);          webOutF = true;        end else begin          errMess = "no markword";        end;      end else begin        errMess = "Нет сообщения";      end;    end else begin      errMess = "Отсутствует страница";    end;        if (webOutF==false) then begin      WebOutString(errMess);    end;    returnend;function LongInt GetRentResForDriver(string driverCode,var string mesg,string action)begin  LongInt serNr;  record RentResVc RentResr;  record RentResBookVc RentBookr;  record RentControlBlock RCr;  boolean foundF;      BlockLoad(RCr);    mesg = "";        RentBookr.CustCode = driverCode;    if (ReadLastKey("CustStartTime",RentBookr,1,true)) then begin      switch (action) begin        case "dispatch":          if (RentBookr.AgreeStatus==RCr.AgreeStatusCreated) then begin            serNr = RentBookr.SerNr;            foundF = true;          end;        case "return":          if (RentBookr.AgreeStatus==RCr.AgreeStatusCreated) then begin //needs to be changed            serNr = RentBookr.SerNr;            foundF = true;          end;      end;      if (foundF==false) then begin        mesg = "Статус резервирования авто неподходящий";      end;    end else begin      mesg = "Авто не зарезервировано для водителя с кодом " & driverCode;    end;    GetRentResForDriver = serNr; return;end;global webpublicprocedure WebCheckValidatorPassword()begin  string 255 argument,result;  area aReceived;  json jsonObj;        result = "failed";    webgetpostdata(aReceived);    if (GetAreaLength(aReceived)>0) then begin      jsonObj = ParseJSONArea(aReceived);      if (JSONGet(jsonObj,"p")=="1111") then begin        result = "confirmed";      end;    end;        WebOutString(result);  return;end;global webpublicprocedure WebGetDriverList()begin  record CUVc CUr;  area driverList;    CUr.Code = "";  while (LoopMain(CUr,1,true)) begin    if (CUr.DriverType==1) then begin      ADDTEXTTOAREA(CUr.Code & Chr(13),driverList);    end;  end;    WebOutArea2(driverList);  return;end;global webpublicprocedure WebDriverTakesCar()begin  record RentResVc RentResr;  string 255 driverCode,basePath,fileName,errMessage,mesg,markWord;  record CUVc CUr;  area htmlAr,tempAr;  longint strPos;  Boolean proceedF;  string 10 nextline;        proceedF = true;    nextline = chr(13) & Chr(10);    driverCode = WebGetArg("driver_code");        CUr.Code = driverCode;    proceedF = ReadFirstMain(CUr,1,true);    if (proceedF==false) then begin      errMessage = "Не заведена карточка для водителя #" & driverCode;    end;        basePath = "webcust\\dr_valid\\";    fileName = "get_car_p2.html";    if (proceedF and FILEEXISTS(basePath & fileName)==false) then begin      errMessage = "Нет страницы";      proceedF = false;    end;        RentResr.SerNr = GetRentResForDriver(CUr.Code,mesg,"dispatch");    if (NonBlank(mesg)) then begin      errMessage = mesg;      proceedF = false;    end;    if (proceedF and ReadFirstMain(RentResr,1,true)==false) then begin      errMessage = "Не найдено резервирование";      proceedF = false;    end;        if (proceedF) then begin      AddFileToArea(basePath & fileName,htmlAr,false);      //initialize form with data      markWord = "\/\/@putdatatoformscript";      strPos = FINDSTRINGINAREA(markWord,htmlAr);      if (strPos>-1) then begin        AddAreaToArea(htmlAr,tempAr);        SETAREAZEROSIZE(htmlAr);                GETAREAFROMAREA(tempAr,0,strPos,htmlAr);        AddTextToArea("(function (){",htmlAr);        AddTextToArea("$(\'#driver_hansa_code\')[0].value = \"" & driverCode & "\";",htmlAr);        AddTextToArea("$(\'#firstname\')[0].value = \"" & ReplaceCharByString(CUr.Name,"\"","\'") & "\";",htmlAr);        AddTextToArea("$(\'#lastname\')[0].value = \"" & ReplaceCharByString(CUr.Name,"\"","\'") & "\";",htmlAr);        if (NonBlank(RentResr.SerialNr)) then begin          AddTextToArea("$(\'#reg_number\')[0].value = \"" & RentResr.SerialNr & "\";",htmlAr);        end;        AddTextToArea("})();" & nextline,htmlAr);        strPos = strPos + len(markWord);        GETAREAFROMAREA(tempAr,strPos,GetAreaLength(tempAr) - strPos,htmlAr);      end;            //include modal conformation window to form button      markWord = "<!--@includemodalwindow-->";      strPos = FINDSTRINGINAREA(markWord,htmlAr);      if (strPos>-1) then begin        fileName = "confirm_form_modal.html";        if (FILEEXISTS(basePath & fileName)) then begin          SETAREAZEROSIZE(tempAr);          AddAreaToArea(htmlAr,tempAr);          SETAREAZEROSIZE(htmlAr);                    GETAREAFROMAREA(tempAr,0,strPos,htmlAr);          AddFileToArea(basePath & fileName,htmlAr,false);          strPos = strPos + len(markWord);          GETAREAFROMAREA(tempAr,strPos,GetAreaLength(tempAr) - strPos,htmlAr);        end;             end;            //find driver photo      markWord = "\/\/@DriverPhoto";      strPos = FINDSTRINGINAREA(markWord,htmlAr);;      fileName = "photo\\" & CUr.Code & ".jpg";      if (strPos>-1 and FILEEXISTS(basePath & fileName)) then begin        SETAREAZEROSIZE(tempAr);        AddAreaToArea(htmlAr,tempAr);        SETAREAZEROSIZE(htmlAr);                GETAREAFROMAREA(tempAr,0,strPos,htmlAr);        AddTextToArea(fileName,htmlAr);        strPos = strPos + len(markWord);        GETAREAFROMAREA(tempAr,strPos,GetAreaLength(tempAr) - strPos,htmlAr);      end;      WebSetContentType("text/html");      if (proceedF) then begin        WebOutArea2(htmlAr);       end;    end;        if (proceedF==false) then begin      ShowMessagePage(errMessage,basePath);    end;  return;end;global webpublicprocedure WebDriverReturnsCar()begin  record RentResVc RentResr;  string 255 driverCode,basePath,fileName,errMessage,mesg,markWord;  record CUVc CUr;  area htmlAr,tempAr;  longint strPos;  Boolean proceedF;  string 10 nextline;  LongInt tempInt;        proceedF = true;    nextline = chr(13) & Chr(10);    driverCode = WebGetArg("driver_code");        CUr.Code = driverCode;    proceedF = ReadFirstMain(CUr,1,true);    if (proceedF==false) then begin      errMessage = "No contact card for driver #" & driverCode;    end;        basePath = "webcust\\dr_valid\\";    fileName = "return_car_p2.html";    if (proceedF and FILEEXISTS(basePath & fileName)==false) then begin      errMessage = "No page to display";      proceedF = false;    end;        RentResr.SerNr = GetRentResForDriver(CUr.Code,mesg,"return");    if (NonBlank(mesg)) then begin      errMessage = mesg;      proceedF = false;    end;    if (proceedF and ReadFirstMain(RentResr,1,true)==false) then begin      errMessage = "Can not find a reservation";      proceedF = false;    end;        if (proceedF) then begin      AddFileToArea(basePath & fileName,htmlAr,false);      //initialize form with data      markWord = "\/\/@putdatatoformscript";      strPos = FINDSTRINGINAREA(markWord,htmlAr);      if (strPos>-1) then begin        AddAreaToArea(htmlAr,tempAr);        SETAREAZEROSIZE(htmlAr);        GETAREAFROMAREA(tempAr,0,strPos,htmlAr);        AddTextToArea("(function (){",htmlAr);        AddTextToArea("$(\'#driver_hansa_code\')[0].value = \"" & driverCode & "\";",htmlAr);        AddTextToArea("$(\'#firstname\')[0].value = \"" & ReplaceCharByString(CUr.Name,"\"","\'") & "\";",htmlAr);        AddTextToArea("$(\'#lastname\')[0].value = \"" & ReplaceCharByString(CUr.Name,"\"","\'") & "\";",htmlAr);        if (NonBlank(RentResr.SerialNr)) then begin          AddTextToArea("$(\'#reg_number\')[0].value = \"" & RentResr.SerialNr & "\";",htmlAr);        end;        if (RentResr.StartMileage<>0) then begin          tempInt = RentResr.StartMileage;          AddTextToArea("$(\'#start_mileage\')[0].value = \"" & tempInt & "\";",htmlAr);        end;        AddTextToArea("})();" & nextline,htmlAr);        strPos = strPos + len(markWord);        GETAREAFROMAREA(tempAr,strPos,GetAreaLength(tempAr) - strPos,htmlAr);      end;            //include modal conformation window to form button      markWord = "<!--@includemodalwindow-->";      strPos = FINDSTRINGINAREA(markWord,htmlAr);      if (strPos>-1) then begin        fileName = "confirm_form_modal.html";        if (FILEEXISTS(basePath & fileName)) then begin          SETAREAZEROSIZE(tempAr);          AddAreaToArea(htmlAr,tempAr);          SETAREAZEROSIZE(htmlAr);                    GETAREAFROMAREA(tempAr,0,strPos,htmlAr);          AddFileToArea(basePath & fileName,htmlAr,false);          strPos = strPos + len(markWord);          GETAREAFROMAREA(tempAr,strPos,GetAreaLength(tempAr) - strPos,htmlAr);        end;             end;            //find driver photo      markWord = "\/\/@DriverPhoto";      strPos = FINDSTRINGINAREA(markWord,htmlAr);      fileName = "photo\\" & CUr.Code & ".jpg";      if (strPos>-1 and FILEEXISTS(basePath & fileName)) then begin        SETAREAZEROSIZE(tempAr);        AddAreaToArea(htmlAr,tempAr);        SETAREAZEROSIZE(htmlAr);                GETAREAFROMAREA(tempAr,0,strPos,htmlAr);        AddTextToArea(fileName,htmlAr);        strPos = strPos + len(markWord);        GETAREAFROMAREA(tempAr,strPos,GetAreaLength(tempAr) - strPos,htmlAr);      end;      WebSetContentType("text/html");      if (proceedF) then begin        WebOutArea2(htmlAr);       end;    end;        if (proceedF==false) then begin      ShowMessagePage(errMessage,basePath);    end;  return;end;global webpublicupdating procedure WebHandleDataFromDriver()begin  record RentResVc RentResr;  area aReceived,encodedSignature,DecodedArea;  string 255 messStr,formFieldName,formFieldData,tstr,fileName,action,mesg,driverCode;  string 10 nextline;  longint i,areaLen;  Integer step;  string 5 c;  Boolean formFieldFoundF,simpleFormFieldF,saveF;  vector string 255 formDataVect;  array string 255 indexes;        action = WebGetArg("action");    nextline = chr(13) & Chr(10);        webgetpostdata(aReceived);    //AddFileToArea("post.txt",aReceived,false);    areaLen = GetAreaLength(aReceived);    if (areaLen>0) then begin      //WRITEAREATOFILE(aReceived,"post.txt",0);      AddTextToArea(nextline,aReceived);      areaLen = GetAreaLength(aReceived);      for (i=0;i<areaLen;i=i+1) begin        c = GetStringFromArea(aReceived,i,1);        if (c==Chr(13) or c==Chr(10)) then begin          if (GetStringFromArea(aReceived,i+1,1)==Chr(10)) then begin            if (NonBlank(formFieldData) and formFieldFoundF) then begin              formDataVect[formFieldName] = formFieldData;            end;            formFieldName = "";            formFieldData = "";            simpleFormFieldF = false;            formFieldFoundF = false;          end;        end else begin          if (formFieldFoundF==false) then begin            formFieldName = formFieldName & c;            switch (formFieldName) begin               case "driver_hansa_code":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;              case "car_status":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;              case "start_mileage":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;               case "end_mileage":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;              case "diff_mileage":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;              case "uber_mileage":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;              case "overmileage":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;              case "km_cost_no_bonus":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;              case "km_cost_with_bonus":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;              case "tot_cost_fuel":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;              case "cashbox_last":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;              case "cashbox_current":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;              case "cashbox_tot":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;              case "bonus_last":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;              case "bonus_current":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;              case "bonus_tot":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;              case "cash_last":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;              case "cash_current":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;              case "cash_tot":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;              case "cashbox_for_pay":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;              case "cash_for_driver":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;              case "feedback":                i = i + 1;                formFieldFoundF = true;                simpleFormFieldF = true;              case "signature":                i = i + len("=data:image/png;base64,");                formFieldFoundF = true;            end;          end else begin            if (simpleFormFieldF) then begin              formFieldData = formFieldData & c;            end else begin              AddTextToArea(c,encodedSignature);            end;          end;        end;      end;            GetVectorTags(formDataVect,indexes);      areaLen = GetAreaLength(encodedSignature);      if (indexes.length>0 or areaLen>0) then begin        driverCode = formDataVect["driver_hansa_code"];        RentResr.SerNr = GetRentResForDriver(driverCode,mesg,action);        if (RentResr.SerNr>-1 and ReadFirstMain(RentResr,1,false)) then begin          for (i=0;i<indexes.length;i=i+1) begin            switch (indexes[i]) begin              case "car_status":                if (action=="dispatch") then begin                  RentResr.CarStatusDispatched = GetStatusCaption(formDataVect[indexes[i]]);                  saveF = true;                end;                if (action=="return") then begin                  RentResr.CarStatusReturned = GetStatusCaption(formDataVect[indexes[i]]);                  saveF = true;                end;              case "start_mileage":                RentResr.StartMileage = StringToVal(formDataVect[indexes[i]],M4Val);                saveF = true;              case "end_mileage":                RentResr.EndMileage = StringToVal(formDataVect[indexes[i]],M4Val);                saveF = true;              case "diff_mileage":                RentResr.DiffMileage = StringToVal(formDataVect[indexes[i]],M4Val);                saveF = true;              case "uber_mileage":                RentResr.UberMileage = StringToVal(formDataVect[indexes[i]],M4Val);                saveF = true;              case "overmileage":                RentResr.OverMileage = StringToVal(formDataVect[indexes[i]],M4Val);                saveF = true;              case "km_cost_no_bonus":                RentResr.KMCostNoBonus = StringToVal(formDataVect[indexes[i]],M4Val);                saveF = true;              case "km_cost_with_bonus":                RentResr.KMCostWithBonus = StringToVal(formDataVect[indexes[i]],M4Val);                saveF = true;              case "tot_cost_fuel":                RentResr.TotCostFuel = StringToVal(formDataVect[indexes[i]],M4Val);                saveF = true;              case "cashbox_last":                RentResr.CashboxLast = StringToVal(formDataVect[indexes[i]],M4Val);                saveF = true;              case "cashbox_current":                RentResr.CashboxCurrent = StringToVal(formDataVect[indexes[i]],M4Val);                saveF = true;              case "cashbox_tot":                RentResr.CashboxTot = StringToVal(formDataVect[indexes[i]],M4Val);                saveF = true;              case "bonus_last":                RentResr.BonusLast = StringToVal(formDataVect[indexes[i]],M4Val);                saveF = true;              case "bonus_current":                RentResr.BonusCurrent = StringToVal(formDataVect[indexes[i]],M4Val);                saveF = true;              case "bonus_tot":                RentResr.BonusTot = StringToVal(formDataVect[indexes[i]],M4Val);                saveF = true;              case "cash_last":                RentResr.CashLast = StringToVal(formDataVect[indexes[i]],M4Val);                saveF = true;              case "cash_current":                RentResr.CashCurrent = StringToVal(formDataVect[indexes[i]],M4Val);                saveF = true;              case "cash_tot":                RentResr.CashTot = StringToVal(formDataVect[indexes[i]],M4Val);                saveF = true;              case "cashbox_for_pay":                RentResr.CashboxForPay = StringToVal(formDataVect[indexes[i]],M4Val);                saveF = true;              case "cash_for_driver":                RentResr.CashForDriver = StringToVal(formDataVect[indexes[i]],M4Val);                saveF = true;              case "feedback":                RentResr.DriverFeedback = formDataVect[indexes[i]];                saveF = true;            end;          end;          if (areaLen>0) then begin            fileName = driverCode & "_car_" & action & ".png"; //needs to be unique for every driver                                  i = 0;            step = 224;            while (areaLen>0) begin              tstr = Base64Decode(GetStringFromArea(encodedSignature,i,step));              AddTextToArea(tstr,DecodedArea);              areaLen = areaLen - step;              i = i + step;              if (areaLen<step) then begin                step = areaLen;              end;            end;                        WRITEAREATOFILE(DecodedArea,fileName,0);            if (FILEEXISTS(fileName)) then begin              if (RecordLinkFile(fileName,0,RentResr,CurrentCompany)) then begin                Delete_File(fileName);              end;            end;          end;          switch (action) begin            case "dispatch":              RentResr.CarDispatchedTime = CurrentTime;            case "return":              RentResr.CarReturnedTime = CurrentTime;          end;          if (saveF) then begin            RECORDSTORE(RentResr,true);           end;        end;      end;            messStr = "Данные приняты";    end else begin      messStr = "Нет данных для обработки";    end;     ShowMessagePage(messStr,"webcust\\dr_valid\\");  return;end;global webpublicprocedure WebMain()begin  string 255 basePath,fileName,markWord;  area htmlAr,tempAr;  longint strPos;    basePath = "webcust\\dr_valid\\";  fileName = "get_car_p1.html";  if (FILEEXISTS(basePath & fileName)) then begin    AddFileToArea(basePath & fileName,htmlAr,false);    markWord = "<!--@<base>-->";    strPos = FINDSTRINGINAREA(markWord,htmlAr);    if (strPos>-1) then begin      AddAreaToArea(htmlAr,tempAr);      SETAREAZEROSIZE(htmlAr);      GETAREAFROMAREA(tempAr,0,strPos,htmlAr);            AddTextToArea("<base href=\"dr_valid\/\">",htmlAr);      strPos = strPos + len(markWord);      GETAREAFROMAREA(tempAr,strPos,GetAreaLength(tempAr) - strPos,htmlAr);    end;    WebOutArea2(htmlAr);  end else begin    WebOutString("FAIL");  end;    return;end;